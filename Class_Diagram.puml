@startuml Class_Diagram
!theme plain
skinparam classAttributeIconSize 0
skinparam classFontSize 9
skinparam classBackgroundColor White
skinparam classBorderColor Black
skinparam linetype ortho
skinparam nodesep 60
skinparam ranksep 80
skinparam minClassWidth 140
skinparam classAttributeFontSize 8
skinparam classMethodFontSize 8
skinparam padding 5
skinparam minlen 2
skinparam arrowThickness 1
skinparam relationFontSize 8
skinparam classHeaderBackgroundColor #E6E6FA
skinparam classStereotypeFontSize 8
skinparam classBorderThickness 1
skinparam roundCorner 5
skinparam shadowing false
skinparam classAttributeIconSize 0
skinparam packageStyle rectangle
skinparam defaultFontSize 8
skinparam arrowFontSize 8
skinparam relationBackgroundColor White
skinparam relationBorderColor Black
skinparam relationBorderThickness 1
skinparam maxMessageSize 100

class User {
  +id: int
  +name: String
  +email: String
  +password: String
  +role: String
  +email_verified_at: DateTime
  +remember_token: String
  +created_at: DateTime
  +updated_at: DateTime
  --
  +carts()
  +orders()
  +testimonials()
}

class Product {
  +id: int
  +name: String
  +slug: String
  +price: Decimal
  +weight: String
  +description: Text
  +stock: Integer
  +size: String
  +category: String
  +inventory_id: Integer
  +image: String
  +created_at: DateTime
  +updated_at: DateTime
  --
  +inventory()
  +carts()
  +orderItems()
  +updateInventoryStock()
}

class Inventory {
  +id: int
  +code: String
  +name: String
  +category: String
  +stock: Integer
  +min_stock: Integer
  +purchase_price: Decimal
  +selling_price: Decimal
  +supplier: String
  +last_restock: Date
  +sizes_available: Array
  +location: String
  +description: Text
  +stock_history: Array
  +created_at: DateTime
  +updated_at: DateTime
  --
  +products()
  +getSellingPriceFormattedAttribute()
  +getPurchasePriceFormattedAttribute()
  +updateStock()
  +updateFromProducts()
}

class Cart {
  +id: int
  +session_id: String
  +user_id: Integer
  +product_id: Integer
  +quantity: Integer
  +price: Decimal
  +created_at: DateTime
  +updated_at: DateTime
  --
  +product()
  +user()
  +getTotalAttribute()
  +getCartItems()
}

class Order {
  +id: int
  +order_number: String
  +user_id: Integer
  +customer_name: String
  +customer_phone: String
  +customer_address: Text
  +notes: Text
  +payment_method: String
  +shipping_method: String
  +subtotal: Decimal
  +shipping_cost: Decimal
  +total_amount: Decimal
  +status: String
  +payment_proof: String
  +payment_verified_at: DateTime
  +shipped_at: DateTime
  +delivered_at: DateTime
  +delivery_proof: String
  +admin_notes: Text
  +tracking_number: String
  +stock_reduced: Boolean
  +stock_reduced_at: DateTime
  +created_at: DateTime
  +updated_at: DateTime
  --
  +user()
  +orderItems()
  +testimonials()
}

class OrderItem {
  +id: int
  +order_id: Integer
  +product_id: Integer
  +product_name: String
  +product_size: String
  +quantity: Integer
  +price: Decimal
  +total: Decimal
  +created_at: DateTime
  +updated_at: DateTime
  --
  +order()
  +product()
}

class Testimonial {
  +id: int
  +user_id: Integer
  +order_id: Integer
  +customer_name: String
  +institution_name: String
  +testimonial_text: Text
  +rating: Integer
  +is_approved: Boolean
  +created_at: DateTime
  +updated_at: DateTime
  --
  +user()
  +order()
}

' Compact layout positioning similar to reference image
' Position classes in a more structured grid layout
top to bottom direction

' Create invisible connections for positioning with more spacing
Inventory -[hidden]right-> Product
Product -[hidden]down-> OrderItem
User -[hidden]down-> Cart
User -[hidden]right-> Order
Order -[hidden]right-> OrderItem
Order -[hidden]down-> Testimonial

' Additional positioning for better alignment and spacing
Cart -[hidden]right-> OrderItem
Testimonial -[hidden]up-> Cart
Inventory -[hidden]down-> User
Product -[hidden]right-> Order
Cart -[hidden]down-> Testimonial
Inventory -[hidden]right--> Order
User -[hidden]right--> Testimonial

' Relationships
User ||--o{ Cart : "has many"
User ||--o{ Order : "has many"
User ||--o{ Testimonial : "has many"

Product ||--o{ Cart : "has many"
Product }o--|| Inventory : "belongs to"
Product ||--o{ OrderItem : "has many"

Inventory ||--o{ Product : "has many"

Order ||--o{ OrderItem : "has many"
Order ||--o{ Testimonial : "has many"

OrderItem }o--|| Order : "belongs to"
OrderItem }o--|| Product : "belongs to"

Testimonial }o--|| User : "belongs to"
Testimonial }o--|| Order : "belongs to"

Cart }o--|| User : "belongs to"
Cart }o--|| Product : "belongs to"

@enduml